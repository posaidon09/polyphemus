"use strict";

var _languages = require("../util/languages");

var _GoogleTTS = require("./GoogleTTS");

var _LingvaTTS = require("./LingvaTTS");

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = void 0 && (void 0).__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var mp3Parser = require('mp3-parser');

[_GoogleTTS.GoogleTTS, _LingvaTTS.LingvaTTS].map(function (translatorClass) {
  describe("methods of TTS class \"".concat(translatorClass.name, "\""), function () {
    test("getAudioBuffer returns audio buffer", function () {
      return __awaiter(void 0, void 0, void 0, function () {
        var tts, audioBuffer, audioBufferView, parsedAudioFrame;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              tts = new translatorClass();
              return [4
              /*yield*/
              , tts.getAudioBuffer('Hello world. This is a demo text from TTS module', 'en')];

            case 1:
              audioBuffer = _a.sent();
              expect(audioBuffer.buffer).toBeInstanceOf(ArrayBuffer);
              expect(typeof audioBuffer.type).toBe('string');
              audioBufferView = new DataView(audioBuffer.buffer);
              parsedAudioFrame = mp3Parser.readFrameHeader(audioBufferView);
              expect(parsedAudioFrame).toHaveProperty('mpegAudioVersion');
              expect(parsedAudioFrame).toHaveProperty('channelMode');
              expect(parsedAudioFrame).toHaveProperty('samplingRate');
              expect(parsedAudioFrame).toHaveProperty('bitrate');
              return [2
              /*return*/
              ];
          }
        });
      });
    });
    test("getSupportedLanguages returns array of supported languages", function () {
      return __awaiter(void 0, void 0, void 0, function () {
        var supportedLanguages;
        return __generator(this, function (_a) {
          supportedLanguages = translatorClass.getSupportedLanguages(); // Languages array are not empty

          expect(Array.isArray(supportedLanguages)).toBeTruthy();
          expect(supportedLanguages.length).not.toEqual(0);
          expect(supportedLanguages.length > 0).toBeTruthy(); // All language coded are correct

          supportedLanguages.forEach(function (lang) {
            expect(_languages.langCodes.includes(lang));
          });
          return [2
          /*return*/
          ];
        });
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR0cy90dHMudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUpBLElBQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxZQUFELENBQXpCOztBQU1DLENBQUMsb0JBQUQsRUFBWSxvQkFBWixFQUFpQyxHQUFqQyxDQUFxQyxVQUFDLGVBQUQsRUFBZ0I7QUFDckQsRUFBQSxRQUFRLENBQUMsMEJBQUEsTUFBQSxDQUF5QixlQUFlLENBQUMsSUFBekMsRUFBNkMsSUFBN0MsQ0FBRCxFQUFtRCxZQUFBO0FBQzFELElBQUEsSUFBSSxDQUFDLHFDQUFELEVBQXdDLFlBQUE7QUFBQSxhQUFBLFNBQUEsQ0FBQSxLQUFBLENBQUEsRUFBQSxLQUFBLENBQUEsRUFBQSxLQUFBLENBQUEsRUFBQSxZQUFBOzs7OztBQUNyQyxjQUFBLEdBQUcsR0FBRyxJQUFJLGVBQUosRUFBTjtBQUNjLHFCQUFBLENBQUE7QUFBQTtBQUFBLGdCQUFNLEdBQUcsQ0FBQyxjQUFKLENBQ3pCLGtEQUR5QixFQUV6QixJQUZ5QixDQUFOLENBQUE7OztBQUFkLGNBQUEsV0FBVyxHQUFHLEVBQUEsQ0FBQSxJQUFBLEVBQWQ7QUFLTixjQUFBLE1BQU0sQ0FBQyxXQUFXLENBQUMsTUFBYixDQUFOLENBQTJCLGNBQTNCLENBQTBDLFdBQTFDO0FBQ0EsY0FBQSxNQUFNLENBQUMsT0FBTyxXQUFXLENBQUMsSUFBcEIsQ0FBTixDQUFnQyxJQUFoQyxDQUFxQyxRQUFyQztBQUdNLGNBQUEsZUFBZSxHQUFHLElBQUksUUFBSixDQUFhLFdBQVcsQ0FBQyxNQUF6QixDQUFsQjtBQUNBLGNBQUEsZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLGVBQVYsQ0FBMEIsZUFBMUIsQ0FBbkI7QUFDTixjQUFBLE1BQU0sQ0FBQyxnQkFBRCxDQUFOLENBQXlCLGNBQXpCLENBQXdDLGtCQUF4QztBQUNBLGNBQUEsTUFBTSxDQUFDLGdCQUFELENBQU4sQ0FBeUIsY0FBekIsQ0FBd0MsYUFBeEM7QUFDQSxjQUFBLE1BQU0sQ0FBQyxnQkFBRCxDQUFOLENBQXlCLGNBQXpCLENBQXdDLGNBQXhDO0FBQ0EsY0FBQSxNQUFNLENBQUMsZ0JBQUQsQ0FBTixDQUF5QixjQUF6QixDQUF3QyxTQUF4Qzs7Ozs7O09BaEIyQyxDQUFBO0FBaUIzQyxLQWpCRyxDQUFKO0FBbUJBLElBQUEsSUFBSSxDQUFDLDREQUFELEVBQStELFlBQUE7QUFBQSxhQUFBLFNBQUEsQ0FBQSxLQUFBLENBQUEsRUFBQSxLQUFBLENBQUEsRUFBQSxLQUFBLENBQUEsRUFBQSxZQUFBOzs7QUFDNUQsVUFBQSxrQkFBa0IsR0FBRyxlQUFlLENBQUMscUJBQWhCLEVBQXJCLEMsQ0FFTjs7QUFDQSxVQUFBLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTixDQUFjLGtCQUFkLENBQUQsQ0FBTixDQUEwQyxVQUExQztBQUNBLFVBQUEsTUFBTSxDQUFDLGtCQUFrQixDQUFDLE1BQXBCLENBQU4sQ0FBa0MsR0FBbEMsQ0FBc0MsT0FBdEMsQ0FBOEMsQ0FBOUM7QUFDQSxVQUFBLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxNQUFuQixHQUE0QixDQUE3QixDQUFOLENBQXNDLFVBQXRDLEcsQ0FFQTs7QUFDQSxVQUFBLGtCQUFrQixDQUFDLE9BQW5CLENBQTJCLFVBQUMsSUFBRCxFQUFLO0FBQy9CLFlBQUEsTUFBTSxDQUFFLHFCQUFnQyxRQUFoQyxDQUF5QyxJQUF6QyxDQUFGLENBQU47QUFDQSxXQUZEOzs7OztPQVRrRSxDQUFBO0FBWWxFLEtBWkcsQ0FBSjtBQWFBLEdBakNPLENBQVI7QUFrQ0EsQ0FuQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtcDNQYXJzZXIgPSByZXF1aXJlKCdtcDMtcGFyc2VyJyk7XG5cbmltcG9ydCB7IGxhbmdDb2RlcyB9IGZyb20gJy4uL3V0aWwvbGFuZ3VhZ2VzJztcbmltcG9ydCB7IEdvb2dsZVRUUyB9IGZyb20gJy4vR29vZ2xlVFRTJztcbmltcG9ydCB7IExpbmd2YVRUUyB9IGZyb20gJy4vTGluZ3ZhVFRTJztcblxuKFtHb29nbGVUVFMsIExpbmd2YVRUU10gYXMgY29uc3QpLm1hcCgodHJhbnNsYXRvckNsYXNzKSA9PiB7XG5cdGRlc2NyaWJlKGBtZXRob2RzIG9mIFRUUyBjbGFzcyBcIiR7dHJhbnNsYXRvckNsYXNzLm5hbWV9XCJgLCAoKSA9PiB7XG5cdFx0dGVzdChgZ2V0QXVkaW9CdWZmZXIgcmV0dXJucyBhdWRpbyBidWZmZXJgLCBhc3luYyAoKSA9PiB7XG5cdFx0XHRjb25zdCB0dHMgPSBuZXcgdHJhbnNsYXRvckNsYXNzKCk7XG5cdFx0XHRjb25zdCBhdWRpb0J1ZmZlciA9IGF3YWl0IHR0cy5nZXRBdWRpb0J1ZmZlcihcblx0XHRcdFx0J0hlbGxvIHdvcmxkLiBUaGlzIGlzIGEgZGVtbyB0ZXh0IGZyb20gVFRTIG1vZHVsZScsXG5cdFx0XHRcdCdlbicsXG5cdFx0XHQpO1xuXG5cdFx0XHRleHBlY3QoYXVkaW9CdWZmZXIuYnVmZmVyKS50b0JlSW5zdGFuY2VPZihBcnJheUJ1ZmZlcik7XG5cdFx0XHRleHBlY3QodHlwZW9mIGF1ZGlvQnVmZmVyLnR5cGUpLnRvQmUoJ3N0cmluZycpO1xuXG5cdFx0XHQvLyBQYXJzZSBhcyBhdWRpbyBmaWxlXG5cdFx0XHRjb25zdCBhdWRpb0J1ZmZlclZpZXcgPSBuZXcgRGF0YVZpZXcoYXVkaW9CdWZmZXIuYnVmZmVyKTtcblx0XHRcdGNvbnN0IHBhcnNlZEF1ZGlvRnJhbWUgPSBtcDNQYXJzZXIucmVhZEZyYW1lSGVhZGVyKGF1ZGlvQnVmZmVyVmlldyk7XG5cdFx0XHRleHBlY3QocGFyc2VkQXVkaW9GcmFtZSkudG9IYXZlUHJvcGVydHkoJ21wZWdBdWRpb1ZlcnNpb24nKTtcblx0XHRcdGV4cGVjdChwYXJzZWRBdWRpb0ZyYW1lKS50b0hhdmVQcm9wZXJ0eSgnY2hhbm5lbE1vZGUnKTtcblx0XHRcdGV4cGVjdChwYXJzZWRBdWRpb0ZyYW1lKS50b0hhdmVQcm9wZXJ0eSgnc2FtcGxpbmdSYXRlJyk7XG5cdFx0XHRleHBlY3QocGFyc2VkQXVkaW9GcmFtZSkudG9IYXZlUHJvcGVydHkoJ2JpdHJhdGUnKTtcblx0XHR9KTtcblxuXHRcdHRlc3QoYGdldFN1cHBvcnRlZExhbmd1YWdlcyByZXR1cm5zIGFycmF5IG9mIHN1cHBvcnRlZCBsYW5ndWFnZXNgLCBhc3luYyAoKSA9PiB7XG5cdFx0XHRjb25zdCBzdXBwb3J0ZWRMYW5ndWFnZXMgPSB0cmFuc2xhdG9yQ2xhc3MuZ2V0U3VwcG9ydGVkTGFuZ3VhZ2VzKCk7XG5cblx0XHRcdC8vIExhbmd1YWdlcyBhcnJheSBhcmUgbm90IGVtcHR5XG5cdFx0XHRleHBlY3QoQXJyYXkuaXNBcnJheShzdXBwb3J0ZWRMYW5ndWFnZXMpKS50b0JlVHJ1dGh5KCk7XG5cdFx0XHRleHBlY3Qoc3VwcG9ydGVkTGFuZ3VhZ2VzLmxlbmd0aCkubm90LnRvRXF1YWwoMCk7XG5cdFx0XHRleHBlY3Qoc3VwcG9ydGVkTGFuZ3VhZ2VzLmxlbmd0aCA+IDApLnRvQmVUcnV0aHkoKTtcblxuXHRcdFx0Ly8gQWxsIGxhbmd1YWdlIGNvZGVkIGFyZSBjb3JyZWN0XG5cdFx0XHRzdXBwb3J0ZWRMYW5ndWFnZXMuZm9yRWFjaCgobGFuZykgPT4ge1xuXHRcdFx0XHRleHBlY3QoKGxhbmdDb2RlcyBhcyByZWFkb25seSBzdHJpbmdbXSkuaW5jbHVkZXMobGFuZykpO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdH0pO1xufSk7XG4iXSwiZmlsZSI6InR0cy90dHMudGVzdC5qcyJ9
