"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LingvaTTS = void 0;

var _axios = _interopRequireDefault(require("axios"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = void 0 && (void 0).__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var LingvaTTS =
/** @class */
function () {
  function LingvaTTS() {
    this.host = 'https://lingva.ml';
  }

  LingvaTTS.prototype.getAudioBuffer = function (text, language) {
    return __awaiter(this, void 0, void 0, function () {
      var url;
      return __generator(this, function (_a) {
        url = "".concat(this.host, "/api/v1/audio/").concat(encodeURIComponent(language), "/").concat(encodeURIComponent(text));
        return [2
        /*return*/
        , (0, _axios.default)({
          url: url,
          method: 'GET',
          responseType: 'json'
        }).then(function (_a) {
          var json = _a.data;

          if (typeof json !== 'object' || json === null) {
            throw new TypeError('Unexpected response');
          }

          if (!('audio' in json) || !Array.isArray(json.audio)) {
            throw new TypeError('Unexpected response');
          }

          return {
            type: 'audio/mpeg',
            buffer: new Uint8Array(json.audio).buffer
          };
        })];
      });
    });
  };

  LingvaTTS.getSupportedLanguages = function () {
    // prettier-ignore
    return ["af", "sq", "am", "ar", "hy", "as", "ay", "az", "bm", "eu", "be", "bn", "bho", "bs", "bg", "ca", "ceb", "ny", "zh", "zh_HANT", "co", "hr", "cs", "da", "dv", "doi", "nl", "en", "eo", "et", "ee", "tl", "fi", "fr", "fy", "gl", "ka", "de", "el", "gn", "gu", "ht", "ha", "haw", "iw", "hi", "hmn", "hu", "is", "ig", "ilo", "id", "ga", "it", "ja", "jw", "kn", "kk", "km", "rw", "gom", "ko", "kri", "ku", "ckb", "ky", "lo", "la", "lv", "ln", "lt", "lg", "lb", "mk", "mai", "mg", "ms", "ml", "mt", "mi", "mr", "mni-Mtei", "lus", "mn", "my", "ne", "no", "or", "om", "ps", "fa", "pl", "pt", "pa", "qu", "ro", "ru", "sm", "sa", "gd", "nso", "sr", "st", "sn", "sd", "si", "sk", "sl", "so", "es", "su", "sw", "sv", "tg", "ta", "tt", "te", "th", "ti", "ts", "tr", "tk", "ak", "uk", "ur", "ug", "uz", "vi", "cy", "xh", "yi", "yo", "zu"];
  };

  return LingvaTTS;
}();

exports.LingvaTTS = LingvaTTS;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR0cy9MaW5ndmFUVFMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSUEsSUFBQSxTQUFBO0FBQUE7QUFBQSxZQUFBO0FBQUEsV0FBQSxTQUFBLEdBQUE7QUFDUyxTQUFBLElBQUEsR0FBTyxtQkFBUDtBQTBDUjs7QUF4Q2EsRUFBQSxTQUFBLENBQUEsU0FBQSxDQUFBLGNBQUEsR0FBYixVQUE0QixJQUE1QixFQUEwQyxRQUExQyxFQUEwRDs7OztBQUNuRCxRQUFBLEdBQUcsR0FBRyxHQUFBLE1BQUEsQ0FBRyxLQUFLLElBQVIsRUFBWSxnQkFBWixFQUFZLE1BQVosQ0FBNkIsa0JBQWtCLENBQzFELFFBRDBELENBQS9DLEVBRVgsR0FGVyxFQUVYLE1BRlcsQ0FFUCxrQkFBa0IsQ0FBQyxJQUFELENBRlgsQ0FBTjtBQUlOLGVBQUEsQ0FBQTtBQUFBO0FBQUEsVUFBTyxvQkFBTTtBQUFFLFVBQUEsR0FBRyxFQUFBLEdBQUw7QUFBTyxVQUFBLE1BQU0sRUFBRSxLQUFmO0FBQXNCLFVBQUEsWUFBWSxFQUFFO0FBQXBDLFNBQU4sRUFBb0QsSUFBcEQsQ0FDTixVQUFDLEVBQUQsRUFBZTtjQUFOLElBQUksR0FBQSxFQUFBLENBQUEsSTs7QUFDWixjQUFJLE9BQU8sSUFBUCxLQUFnQixRQUFoQixJQUE0QixJQUFJLEtBQUssSUFBekMsRUFBK0M7QUFDOUMsa0JBQU0sSUFBSSxTQUFKLENBQWMscUJBQWQsQ0FBTjtBQUNBOztBQUNELGNBQUksRUFBRSxXQUFXLElBQWIsS0FBc0IsQ0FBQyxLQUFLLENBQUMsT0FBTixDQUFlLElBQVksQ0FBQyxLQUE1QixDQUEzQixFQUEr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cG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5cbmltcG9ydCB7IFRUU0F1ZGlvQnVmZmVyLCBUVFNQcm92aWRlclByb3BzIH0gZnJvbSAnLi4nO1xuXG5leHBvcnQgY2xhc3MgTGluZ3ZhVFRTIGltcGxlbWVudHMgVFRTUHJvdmlkZXJQcm9wcyB7XG5cdHByaXZhdGUgaG9zdCA9ICdodHRwczovL2xpbmd2YS5tbCc7XG5cblx0cHVibGljIGFzeW5jIGdldEF1ZGlvQnVmZmVyKHRleHQ6IHN0cmluZywgbGFuZ3VhZ2U6IHN0cmluZyk6IFByb21pc2U8VFRTQXVkaW9CdWZmZXI+IHtcblx0XHRjb25zdCB1cmwgPSBgJHt0aGlzLmhvc3R9L2FwaS92MS9hdWRpby8ke2VuY29kZVVSSUNvbXBvbmVudChcblx0XHRcdGxhbmd1YWdlLFxuXHRcdCl9LyR7ZW5jb2RlVVJJQ29tcG9uZW50KHRleHQpfWA7XG5cblx0XHRyZXR1cm4gYXhpb3MoeyB1cmwsIG1ldGhvZDogJ0dFVCcsIHJlc3BvbnNlVHlwZTogJ2pzb24nIH0pLnRoZW4oXG5cdFx0XHQoeyBkYXRhOiBqc29uIH0pID0+IHtcblx0XHRcdFx0aWYgKHR5cGVvZiBqc29uICE9PSAnb2JqZWN0JyB8fCBqc29uID09PSBudWxsKSB7XG5cdFx0XHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignVW5leHBlY3RlZCByZXNwb25zZScpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICghKCdhdWRpbycgaW4ganNvbikgfHwgIUFycmF5LmlzQXJyYXkoKGpzb24gYXMgYW55KS5hdWRpbykpIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmV4cGVjdGVkIHJlc3BvbnNlJyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdHR5cGU6ICdhdWRpby9tcGVnJyxcblx0XHRcdFx0XHRidWZmZXI6IG5ldyBVaW50OEFycmF5KChqc29uIGFzIGFueSkuYXVkaW8pLmJ1ZmZlcixcblx0XHRcdFx0fTtcblx0XHRcdH0sXG5cdFx0KTtcblx0fVxuXG5cdHB1YmxpYyBzdGF0aWMgZ2V0U3VwcG9ydGVkTGFuZ3VhZ2VzKCkge1xuXHRcdC8vIHByZXR0aWVyLWlnbm9yZVxuXHRcdHJldHVybiBbXG5cdFx0XHRcImFmXCIsIFwic3FcIiwgXCJhbVwiLCBcImFyXCIsIFwiaHlcIiwgXCJhc1wiLCBcImF5XCIsIFwiYXpcIiwgXCJibVwiLCBcImV1XCIsXG5cdFx0XHRcImJlXCIsIFwiYm5cIiwgXCJiaG9cIiwgXCJic1wiLCBcImJnXCIsIFwiY2FcIiwgXCJjZWJcIiwgXCJueVwiLCBcInpoXCIsIFwiemhfSEFOVFwiLFxuXHRcdFx0XCJjb1wiLCBcImhyXCIsIFwiY3NcIiwgXCJkYVwiLCBcImR2XCIsIFwiZG9pXCIsIFwibmxcIiwgXCJlblwiLCBcImVvXCIsIFwiZXRcIiwgXCJlZVwiLFxuXHRcdFx0XCJ0bFwiLCBcImZpXCIsIFwiZnJcIiwgXCJmeVwiLCBcImdsXCIsIFwia2FcIiwgXCJkZVwiLCBcImVsXCIsIFwiZ25cIiwgXCJndVwiLCBcImh0XCIsXG5cdFx0XHRcImhhXCIsIFwiaGF3XCIsIFwiaXdcIiwgXCJoaVwiLCBcImhtblwiLCBcImh1XCIsIFwiaXNcIiwgXCJpZ1wiLCBcImlsb1wiLCBcImlkXCIsXG5cdFx0XHRcImdhXCIsIFwiaXRcIiwgXCJqYVwiLCBcImp3XCIsIFwia25cIiwgXCJra1wiLCBcImttXCIsIFwicndcIiwgXCJnb21cIiwgXCJrb1wiLFxuXHRcdFx0XCJrcmlcIiwgXCJrdVwiLCBcImNrYlwiLCBcImt5XCIsIFwibG9cIiwgXCJsYVwiLCBcImx2XCIsIFwibG5cIiwgXCJsdFwiLCBcImxnXCIsXG5cdFx0XHRcImxiXCIsIFwibWtcIiwgXCJtYWlcIiwgXCJtZ1wiLCBcIm1zXCIsIFwibWxcIiwgXCJtdFwiLCBcIm1pXCIsIFwibXJcIiwgXCJtbmktTXRlaVwiLFxuXHRcdFx0XCJsdXNcIiwgXCJtblwiLCBcIm15XCIsIFwibmVcIiwgXCJub1wiLCBcIm9yXCIsIFwib21cIiwgXCJwc1wiLCBcImZhXCIsIFwicGxcIixcblx0XHRcdFwicHRcIiwgXCJwYVwiLCBcInF1XCIsIFwicm9cIiwgXCJydVwiLCBcInNtXCIsIFwic2FcIiwgXCJnZFwiLCBcIm5zb1wiLCBcInNyXCIsXG5cdFx0XHRcInN0XCIsIFwic25cIiwgXCJzZFwiLCBcInNpXCIsIFwic2tcIiwgXCJzbFwiLCBcInNvXCIsIFwiZXNcIiwgXCJzdVwiLCBcInN3XCIsIFwic3ZcIixcblx0XHRcdFwidGdcIiwgXCJ0YVwiLCBcInR0XCIsIFwidGVcIiwgXCJ0aFwiLCBcInRpXCIsIFwidHNcIiwgXCJ0clwiLCBcInRrXCIsIFwiYWtcIiwgXCJ1a1wiLCBcInVyXCIsXG5cdFx0XHRcInVnXCIsIFwidXpcIiwgXCJ2aVwiLCBcImN5XCIsIFwieGhcIiwgXCJ5aVwiLCBcInlvXCIsIFwienVcIlxuXHRcdF07XG5cdH1cbn1cbiJdLCJmaWxlIjoidHRzL0xpbmd2YVRUUy9pbmRleC5qcyJ9
