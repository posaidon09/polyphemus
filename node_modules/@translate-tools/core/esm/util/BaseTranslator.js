// TODO: remove it and provide utils to implement translators
/**
 * Basic abstract class for translator
 */
var BaseTranslator = /** @class */ (function () {
    function BaseTranslator(options) {
        var _this = this;
        this.options = {};
        /**
         * Util to wrap url to CORS proxy
         */
        this.wrapUrlToCorsProxy = function (url) {
            // Use as prefix
            if (typeof _this.options.corsProxy === 'string') {
                return _this.options.corsProxy + url;
            }
            // Run user defined transformation
            if (typeof _this.options.corsProxy === 'function') {
                return _this.options.corsProxy(url);
            }
            return url;
        };
        if (options !== undefined) {
            this.options = options;
        }
    }
    BaseTranslator.prototype.checkLimitExceeding = function (text) {
        var plainText = Array.isArray(text) ? text.join('') : text;
        var extra = plainText.length - this.getLengthLimit();
        return extra > 0 ? extra : 0;
    };
    BaseTranslator.translatorName = 'UnknownTranslator';
    BaseTranslator.isRequiredKey = function () { return false; };
    BaseTranslator.isSupportedAutoFrom = function () { return false; };
    BaseTranslator.getSupportedLanguages = function () { return []; };
    return BaseTranslator;
}());
export { BaseTranslator };

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWwvQmFzZVRyYW5zbGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0NBLDZEQUE2RDtBQUM3RDs7R0FFRztBQUVIO0lBZ0JDLHdCQUFZLE9BQStCO1FBQTNDLGlCQUlDO1FBTGtCLFlBQU8sR0FBMEIsRUFBUyxDQUFDO1FBeUI5RDs7V0FFRztRQUNPLHVCQUFrQixHQUFHLFVBQUMsR0FBVztZQUMxQyxnQkFBZ0I7WUFDaEIsSUFBSSxPQUFPLEtBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxLQUFLLFFBQVEsRUFBRTtnQkFDL0MsT0FBTyxLQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUM7YUFDcEM7WUFFRCxrQ0FBa0M7WUFDbEMsSUFBSSxPQUFPLEtBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxLQUFLLFVBQVUsRUFBRTtnQkFDakQsT0FBTyxLQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUNuQztZQUVELE9BQU8sR0FBRyxDQUFDO1FBQ1osQ0FBQyxDQUFDO1FBdENELElBQUksT0FBTyxLQUFLLFNBQVMsRUFBRTtZQUMxQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztTQUN2QjtJQUNGLENBQUM7SUFjTSw0Q0FBbUIsR0FBMUIsVUFBMkIsSUFBdUI7UUFDakQsSUFBTSxTQUFTLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzdELElBQU0sS0FBSyxHQUFHLFNBQVMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3ZELE9BQU8sS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQW5Dc0IsNkJBQWMsR0FBVyxtQkFBbUIsQ0FBQztJQUV0RCw0QkFBYSxHQUFHLGNBQU0sT0FBQSxLQUFLLEVBQUwsQ0FBSyxDQUFDO0lBRTVCLGtDQUFtQixHQUFHLGNBQU0sT0FBQSxLQUFLLEVBQUwsQ0FBSyxDQUFDO0lBRWxDLG9DQUFxQixHQUFHLGNBQWtCLE9BQUEsRUFBRSxFQUFGLENBQUUsQ0FBQztJQStDNUQscUJBQUM7Q0F4REQsQUF3REMsSUFBQTtTQXhEcUIsY0FBYyIsImZpbGUiOiJ1dGlsL0Jhc2VUcmFuc2xhdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0VHJhbnNsYXRvckluc3RhbmNlTWVtYmVycyxcblx0bGFuZ0NvZGUsXG5cdGxhbmdDb2RlV2l0aEF1dG8sXG59IGZyb20gJy4uL3R5cGVzL1RyYW5zbGF0b3InO1xuXG5leHBvcnQgdHlwZSBDb3JzUHJveHkgPSBzdHJpbmcgfCAoKHVybDogc3RyaW5nKSA9PiBzdHJpbmcpO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRyYW5zbGF0b3JPcHRpb25zIHtcblx0LyoqXG5cdCAqIEFjY2VzcyBrZXkgZm9yIHJlcXVlc3RzIHRvIHRyYW5zbGF0b3IgQVBJXG5cdCAqL1xuXHRhcGlLZXk/OiBzdHJpbmc7XG5cblx0LyoqXG5cdCAqIFVuaW9uIHRleHQgYXJyYXkgdG8gMSByZXF1ZXN0IChvciBtb3JlLCBidXQgbGVzcyB0aGFuIHVzdWFseSBhbnl3YXkpLlxuXHQgKlxuXHQgKiBPcHRpb24gZm9yIHJlZHVjZSB0aGUgbnVtYmVyIG9mIHJlcXVlc3RzLCBidXQgaXQgY2FuIG1ha2UgYXJ0ZWZhY3RzIGluIHRyYW5zbGF0ZWQgdGV4dC5cblx0ICpcblx0ICogU29tZSBtb2R1bGVzIG1heSBub3Qgc3VwcG9ydCB0aGlzIGZlYXR1cmUuXG5cdCAqL1xuXHR1c2VNdWx0aXBsZXhpbmc/OiBib29sZWFuO1xuXG5cdC8qKlxuXHQgKiBBZGRpdGlvbmFsIGhlYWRlcnMgZm9yIHJlcXVlc3RzXG5cdCAqL1xuXHRoZWFkZXJzPzogUmVjb3JkPHN0cmluZywgc3RyaW5nPjtcblxuXHQvKipcblx0ICogUHJveHkgcHJlZml4IG9yIHRyYW5zZm9ybSBmdW5jdGlvbiB3aGljaCByZXR1cm4gdXJsIHdpdGggQ09SUyBwcm94eVxuXHQgKlxuXHQgKiBDT1JTIHByb3h5IHVzZWZ1bCB0byBhdm9pZCBDT1JTIGVycm9yIGluIGJyb3dzZXIgb3IgdG8gbWFzayBzZXJ2ZXIgcmVxdWVzdHMgYXMgYnJvd3NlciByZXF1ZXN0cy5cblx0ICpcblx0ICogQWxsIHJlcXVlc3RzIHdpbGwgc2VuZCB0aHJvdWdoIHRoaXMgcHJveHkgc2VydmVyIGFuZCB0aGlzIHNlcnZlciB3aWxsIG1vZGlmeSBoZWFkZXJzXG5cdCAqL1xuXHRjb3JzUHJveHk/OiBDb3JzUHJveHk7XG59XG5cbi8vIFRPRE86IHJlbW92ZSBpdCBhbmQgcHJvdmlkZSB1dGlscyB0byBpbXBsZW1lbnQgdHJhbnNsYXRvcnNcbi8qKlxuICogQmFzaWMgYWJzdHJhY3QgY2xhc3MgZm9yIHRyYW5zbGF0b3JcbiAqL1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQmFzZVRyYW5zbGF0b3I8QyBleHRlbmRzIFJlY29yZDxhbnksIGFueT4gPSB7fT5cbmltcGxlbWVudHMgVHJhbnNsYXRvckluc3RhbmNlTWVtYmVyc1xue1xuXHRwdWJsaWMgc3RhdGljIHJlYWRvbmx5IHRyYW5zbGF0b3JOYW1lOiBzdHJpbmcgPSAnVW5rbm93blRyYW5zbGF0b3InO1xuXG5cdHB1YmxpYyBzdGF0aWMgaXNSZXF1aXJlZEtleSA9ICgpID0+IGZhbHNlO1xuXG5cdHB1YmxpYyBzdGF0aWMgaXNTdXBwb3J0ZWRBdXRvRnJvbSA9ICgpID0+IGZhbHNlO1xuXG5cdHB1YmxpYyBzdGF0aWMgZ2V0U3VwcG9ydGVkTGFuZ3VhZ2VzID0gKCk6IGxhbmdDb2RlW10gPT4gW107XG5cblx0cHVibGljIGFic3RyYWN0IGdldExlbmd0aExpbWl0KCk6IG51bWJlcjtcblxuXHRwdWJsaWMgYWJzdHJhY3QgZ2V0UmVxdWVzdHNUaW1lb3V0KCk6IG51bWJlcjtcblxuXHRwcm90ZWN0ZWQgcmVhZG9ubHkgb3B0aW9uczogVHJhbnNsYXRvck9wdGlvbnMgJiBDID0ge30gYXMgYW55O1xuXHRjb25zdHJ1Y3RvcihvcHRpb25zPzogVHJhbnNsYXRvck9wdGlvbnMgJiBDKSB7XG5cdFx0aWYgKG9wdGlvbnMgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0dGhpcy5vcHRpb25zID0gb3B0aW9ucztcblx0XHR9XG5cdH1cblxuXHRhYnN0cmFjdCB0cmFuc2xhdGUoXG5cdFx0dGV4dDogc3RyaW5nLFxuXHRcdGxhbmdGcm9tOiBsYW5nQ29kZVdpdGhBdXRvLFxuXHRcdGxhbmdUbzogbGFuZ0NvZGUsXG5cdCk6IFByb21pc2U8c3RyaW5nPjtcblxuXHRhYnN0cmFjdCB0cmFuc2xhdGVCYXRjaChcblx0XHR0ZXh0OiBzdHJpbmdbXSxcblx0XHRsYW5nRnJvbTogbGFuZ0NvZGVXaXRoQXV0byxcblx0XHRsYW5nVG86IGxhbmdDb2RlLFxuXHQpOiBQcm9taXNlPEFycmF5PHN0cmluZyB8IG51bGw+PjtcblxuXHRwdWJsaWMgY2hlY2tMaW1pdEV4Y2VlZGluZyh0ZXh0OiBzdHJpbmcgfCBzdHJpbmdbXSkge1xuXHRcdGNvbnN0IHBsYWluVGV4dCA9IEFycmF5LmlzQXJyYXkodGV4dCkgPyB0ZXh0LmpvaW4oJycpIDogdGV4dDtcblx0XHRjb25zdCBleHRyYSA9IHBsYWluVGV4dC5sZW5ndGggLSB0aGlzLmdldExlbmd0aExpbWl0KCk7XG5cdFx0cmV0dXJuIGV4dHJhID4gMCA/IGV4dHJhIDogMDtcblx0fVxuXG5cdC8qKlxuXHQgKiBVdGlsIHRvIHdyYXAgdXJsIHRvIENPUlMgcHJveHlcblx0ICovXG5cdHByb3RlY3RlZCB3cmFwVXJsVG9Db3JzUHJveHkgPSAodXJsOiBzdHJpbmcpID0+IHtcblx0XHQvLyBVc2UgYXMgcHJlZml4XG5cdFx0aWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMuY29yc1Byb3h5ID09PSAnc3RyaW5nJykge1xuXHRcdFx0cmV0dXJuIHRoaXMub3B0aW9ucy5jb3JzUHJveHkgKyB1cmw7XG5cdFx0fVxuXG5cdFx0Ly8gUnVuIHVzZXIgZGVmaW5lZCB0cmFuc2Zvcm1hdGlvblxuXHRcdGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLmNvcnNQcm94eSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0cmV0dXJuIHRoaXMub3B0aW9ucy5jb3JzUHJveHkodXJsKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdXJsO1xuXHR9O1xufVxuIl19
